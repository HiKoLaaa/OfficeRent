// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OfficeRent.Api.Database;

namespace OfficeRent.Api.Migrations
{
    [DbContext(typeof(OfficeDbContext))]
    [Migration("20210914200003_AddOffice")]
    partial class AddOffice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("OfficeRent.Api.Models.Office.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<short>("Floor")
                        .HasColumnType("smallint")
                        .HasColumnName("floor");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_offices");

                    b.ToTable("offices");
                });

            modelBuilder.Entity("OfficeRent.Api.Models.Office.Office", b =>
                {
                    b.OwnsOne("OfficeRent.Api.Models.Office.Address", "Address", b1 =>
                        {
                            b1.Property<int>("OfficeId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("id")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("varchar(70)")
                                .HasColumnName("city");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("varchar(70)")
                                .HasColumnName("street");

                            b1.Property<string>("StreetNumber")
                                .IsRequired()
                                .HasColumnType("varchar(10)")
                                .HasColumnName("street_number");

                            b1.HasKey("OfficeId")
                                .HasName("pk_offices");

                            b1.ToTable("offices");

                            b1.WithOwner()
                                .HasForeignKey("OfficeId")
                                .HasConstraintName("fk_offices_offices_id");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
